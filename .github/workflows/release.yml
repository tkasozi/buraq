# .github/workflows/release.yml
name: release.yml

on:
  release:
    types: [published]

jobs:
  # This job triggers the reusable workflow for each matrix combination
  build_and_package:
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        build_type: [ Release ]
        include:
          - os: windows-latest
            vcpkg_triplet: x64-windows
            generator: "Visual Studio 17 2022"
            arch: x64
          - os: ubuntu-latest
            vcpkg_triplet: x64-linux
          - os: macos-latest
            vcpkg_triplet: x64-osx

    uses: ./.github/workflows/reusable-build.yml # Calls the reusable workflow
    secrets:
      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
    with:
      os: ${{ matrix.os }}
      build_type: ${{ matrix.build_type }}
      vcpkg_triplet: ${{ matrix.vcpkg_triplet }}
      generator: ${{ matrix.generator }}
      arch: ${{ matrix.arch }}

  # A separate job that runs only for Release builds on Windows and publishes
  publish_release:
    needs: build_and_package # This job depends on the build completing
    if: needs.build_and_package.outputs.build_successful == 'true'
    runs-on: ubuntu-latest # Can be a single runner, as it only downloads and uploads
    permissions:
      contents: write # To upload release assets
      packages: read # If it needs to read from GitHub Packages again

    steps:
      - name: Get Release Information (from trigger, if this is a release workflow)
        run: |
          echo "Release Tag: ${{ github.ref }}"
          echo "Release Upload URL: ${{ github.event.release.upload_url }}"
          # For 'release' event, the upload_url is direct.
          # For 'push' to main (as configured here), you might need to find/create a release.

      - name: Download Windows Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_and_package.outputs }} # Specific artifact name for Windows Release build
          path: ./windows-release-build/

      - name: List Downloaded Artifacts
        run: ls -R ./windows-release-build/
        shell: bash

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/windows-release-build/it-tools-editor-${{ runner.os }}-${{ matrix.build_type }}-${{ github.event.release.tag_name || 'x.x.x-dev' }}.exe
          asset_name: ${{ env.APP_NAME }}-${{ github.event.release.tag_name }}-${{ runner.os }}.zip
          asset_content_type: application/zip
